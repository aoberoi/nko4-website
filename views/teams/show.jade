- if (team.includes(user, session.team) || admin)
  .edit: a.button( href='/teams/' + team + '/edit' ) Edit

h1
  = title(team.entry.name || team.name)
  //!= partial('secrets')

 != markdown(team.description, { sanitize: true })

- if (team.invited(session.invite))
  h2 You're invited to this team!
  p.accept
    a.button.scary( href='/login/github' ) Accept Invitation
    |  via 
    img( src='/images/github.png', style='margin-bottom: -4px;' )
    | github

- if (false && (admin || team.includes(user)))
  ul.steps
    li( class=team.entry.name ? 'done' : 'pending' )
      a( href='#entry' ) Entry info
    li( class=team.lastDeploy ? 'done' : 'pending' )
      a( href='#deploy' ) Deploy
    li( class=team.entry.votable ? 'done' : 'pending' )
      a( href='#votable' ) Submit for Voting

  .step#entry
    - if (!team.entry.name)
      h2.pending Entry Info Missing
      p Describe to judges what your entry is about.
        a.button( href='/teams/' + team + '/edit' ) Add &raquo;
    - else
      h2.done Entry Info Complete
      p Change this information at any time.
        a.button( href='/teams/' + team + '/edit' ) Edit &raquo;

  .step#deploy
    - if (lastDeploy = team.lastDeploy)
      h2.done Successfully Deployed
        .details
          - lastDeployedAt = new Date(lastDeploy._id.generationTime)
          time( datetime=lastDeployedAt.toISOString(),
                title=lastDeployedAt.toISOString() )
            = relativeDate(lastDeployedAt)
          |  &mdash;
          a( href=team.entry.url )= team.entry.url
    - else
      h2.pending Not Yet Deployed
    != partial('secrets')

    h3
      a( href='http://blog.nodeknockout.com/post/9428533699/nko-quick-start' ) NKO Quick Start

    h4 Deploy check-in &mdash; 
      a( href='https://github.com/nko2/website/tree/master/module#readme' ) More info
    ul
      li require('nko')('
        b= team.code
        | '); \/\/ team code
      li export NODE_ENV=production

    h4 Joyent no.de &mdash; 
      a( href='http://blog.nodeknockout.com/post/9393790204/coundown-to-ko-20-no-de-getting-started-guide' ) More info

    h4 Heroku &mdash; 
      a( href='http://blog.nodeknockout.com/post/9262660989/countdown-to-ko-10-deploying-your-node-js-app-to' ) More info
    ul
      li heroku login
      li git remote add heroku git@heroku.com:nko2-#{team.slug}.git
      li git push heroku master

    h4 Linode &mdash; 
      a( href='http://blog.nodeknockout.com/post/9300619913/countdown-to-ko-14-deploying-your-node-js-app-to' ) More info
    ul
      li
        | Login to
        a( href='https://manager.linode.com/' ) Linode Manager
        table
          tr
            th Username
            td= team.linode.username
          tr
            th Password
            td= team.linode.password
          tr
            th IP
            td= team.linode.ip_address

  .step#votable
    form( method='POST', action='/teams/' + team )
      != _csrf
      input( type='hidden', name='_method', value='PUT' )

      - if (!team.entry.votable)
        h2.pending Not Officially Submitted
        p
          | Your app is not yet officially submitted for voting. When you
          | submit it for voting, judges will review it at:
          a( href=team.entry.url )= team.entry.url
          | .

        input( type='hidden', name='entry[votable]', value=1 )
        .buttons: input.scary( type='submit', value='Submit for Voting' )

        p
          b Future deploys will not change your URL once your app is votable.
          |  You can submit your app for voting any time between now and
          | judging week. You can also change your mind and remove it from
          | voting later.

      - else
        h2.done Submitted for Voting
        p Judges will review your app at: 
          a( href=team.entry.url)= team.entry.url
          | .

        input( type='hidden', name='entry[votable]', value=0 )
        .buttons: input( type='submit', value='Remove from Voting' )

        p: b Remove it from voting to deploy to a different URL.

- if (team.entry.name)
  .entry-info
    - if (url = team.entry.url)
      a( href=url )
        img.screenshot( src='http://pinkyurl.com/i?url=' + encodeURIComponent(url) + '&out-format=png&resize=160x93' )
      h2: a( href=url )= team.entry.name
    - else
      img.screenshot( src='/images/blank.png' )
      h2= team.entry.name
    h3= 'by ' + team.name
    - if (req.vote)
      a.vote.scary( href='#votes' )
        img.heart( src='/images/iframe/heart.png' )
        |  You've voted for this entry
    - else if (voting)
      a.button.vote.scary( href='#votes' ) Vote
    .score
      a( href='/scores#' + team )
        h2= team.scores.overall.toFixed(2)
        .dimension overall
    .clear
    != markdown(team.entry.description)
    - if (team.entry.instructions)
      h4 Judging Instructions
      != markdown(team.entry.instructions)

- if (people.length)
  h2 Who
  - if (admin)
    a( href='mailto:' + _.pluck(people, 'email').join(',') ) Email team
  ul.people
    - each person in people
      li
        img.avatar( src=avatar_url(person) )
        a( href='/people/' + person )= person.github.login
        - if (person.location)
          |  &mdash; 
          = person.location

- if (team.invites.length)
  h2 Invites (#{team.invites.length} pending)
  - if (team.includes(user, session.team) || admin)
    p Check your email for invites or resend invites below.
    ul.invites
      - each invite in team.invites
        li
          a( href="mailto: " + invite.email ) #{invite.email}
          |  &mdash; 
          a( href='/teams/' + team + '/invites/' + invite.id, rel='nofollow' ) resend
          span.sending

- if (team.entry.colophon)
  h2 How
  != markdown(team.entry.colophon)

- if (false && team.description) // no longer show team description
  h2 What
  != markdown(team.description)

- if (publicVotes && publicVotes.length || votes && votes.length)
  h1#votes Votes

  h2 Your Vote
  - if (req.user && team.includes(req.user))
    p.sorry Team members may not vote on their own teams.
  - else
    != partial('votes/form', { vote: vote })
    - if (req.user)
      p: a( href='/people/' + req.user + '#votes' )  View all your votes &rarr;

  h2 Other Votes
  ul.votes
    - if (publicVotes.length)
      li.vote
        .info.hearts
          - each vote in publicVotes
            img.heart( src='/images/iframe/heart.png' )
          |  (#{publicVotes.length})
        .people
          - each vote in publicVotes
            - if (vote.person)
              a( href='/people/' + vote.person, title=vote.person.login )
                img.avatar( src=avatar_url(vote.person, 30) )
  ul.votes!= partial('votes/vote', votes)
