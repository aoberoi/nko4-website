- title('Entries')
h1 Entries (#{teams.count})

form.search
  input( type='search', name='q', value=req.query.q, placeholder='Search' )

ul.sorts
  //- li Order by:
  //- each k in [ 'Overall', 'Solo', 'Popularity', 'Utility / Fun', 'Design', 'Innovation', 'Completeness' ]
    - s = k.split(' ')[0].toLowerCase()
    li( class=(req.query.sort || 'overall') === s ? 'current' : '' )
      a( href=urlFor({ sort: s }) )= k

ul.teams
  each team in teams
    li
      - url = team.entry.url
      a( href=url )
        img.screenshot( src=team.screenshot )
      h2: a( href=url )= team.entry.name
      h4 by 
        a( href='/teams/' + team )= team.name
      .description
        if p = markdown(team.entry.description).match('<p>.+?</p>')
          != p
      //- team.scores
        .score
          a( href='/scores#' + team )
            h3= team.scores[sort].toFixed(2)
            .dimension= sort
      .clear
  - nextPage = (+req.query.page || 1) + 1
  .more: a( href=urlFor({ page: nextPage }) ) more
